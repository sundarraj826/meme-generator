{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/app-routing.module.ts","./src/app/generator/generator.component.ts","./src/app/generator/generator.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'meme-generator';\n}\n","<app-navbar></app-navbar>\n\n<app-generator></app-generator>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { GeneratorComponent } from './generator/generator.component';\nimport { ColorChromeModule } from 'ngx-color/chrome';\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    GeneratorComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ColorChromeModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header class=\"d-flex align-content-center justify-content-center\">\n    <div>\n        ðŸ¥³ðŸ¥³  Memes Generator ðŸ¥³ðŸ¥³\n    </div>\n</header>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ColorEvent } from 'ngx-color';\n\n\n@Component({\n  selector: 'app-generator',\n  templateUrl: './generator.component.html',\n  styleUrls: ['./generator.component.scss']\n})\nexport class GeneratorComponent implements OnInit {\n\n  @ViewChild('memeCanvas', { static: false }) myCanvas: any;\n  topText: string = '';\n  bottomText: string = '';\n\n  fileEvent: any;\n  textColor: string = '#000000';\n  backgroundColor: string = '#ffffff';\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  imgPreview(e: any) {\n\n    this.fileEvent = e;\n\n    if (e instanceof Event && e.target instanceof HTMLInputElement && e.target.files && e.target.files.length > 0) {\n      let canvas = this.myCanvas.nativeElement;\n      let ctx = canvas.getContext('2d')\n  \n      let render = new FileReader();\n      render.readAsDataURL(e.target.files[0]);\n  \n  \n      render.onload = function (event) {\n        const img = new Image();\n        img.src = event.target?.result as string;\n  \n        img.onload = function () {\n          ctx.drawImage(img, 50, 150, 600, 500)\n        }\n        console.log(img)\n      }\n    }\n\n   \n  }\n\n  drawText() {\n    let canvas = this.myCanvas.nativeElement;\n    let ctx = canvas.getContext('2d');\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    this.imgPreview(this.fileEvent);\n\n    ctx.fillStyle = this.backgroundColor;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    ctx.fillStyle = this.textColor;\n    ctx.font = '50px comic Sans MS';\n    ctx.textAlign = 'center';\n    ctx.fillText(this.topText, canvas.width / 2, 100);\n    ctx.fillText(this.bottomText, canvas.width / 2, 750);\n  }\n\n  canvasTextColor($event: ColorEvent) {\n    this.textColor = $event.color.hex;\n    this.drawText();\n  }\n\n  canvasBackgroundColor($event: ColorEvent){\n      this.backgroundColor = $event.color.hex;\n      this.drawText();\n  }\n\n\n\n  downloadImg(){\n      let canvas = this.myCanvas.nativeElement;\n\n      let image = canvas.toDataURL('image/png');\n\n      let link = document.createElement('a');\n      link.download = 'memeImage.png';\n      link.href = image;\n      link.click();\n  }\n}\n","<div class=\"app\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <form action=\"\">\n                            <div class=\"form-group\">\n                                <label for=\"\">Select an Image</label>\n                                <input type=\"file\" class=\"form-control\" accept=\"Image/*\" (change)=\"imgPreview($event)\">\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"\">Top Text</label>\n                                <input type=\"text\" class=\"form-control\" name=\"topText\" [(ngModel)]=\"topText\" (keyup)=\"drawText()\">\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"\">Bottom Text</label>\n                                <input type=\"text\" class=\"form-control\" name=\"bottomText\" [(ngModel)]=\"bottomText\" (keyup)=\"drawText()\">\n                            </div>\n\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\">Text Color</label>\n                                        <color-chrome (onChangeComplete)=\"canvasTextColor($event)\"></color-chrome>\n                                    </div>\n                                    \n                                </div>\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\">Background Color</label>\n                                        <color-chrome (onChangeComplete)=\"canvasBackgroundColor($event)\"></color-chrome>\n                                    </div>\n                                    \n                                </div>\n\n                                <button class=\"btn btn-primary w-100\" (click)=\"downloadImg()\">Download</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n\n            </div>\n            <div class=\"col-md-6\">\n                <canvas class=\"drop-shadow\" #memeCanvas width=\"700\" height=\"800\" style=\"background-color: #f9f9fd;\"></canvas>\n            </div>\n        </div>\n    </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}